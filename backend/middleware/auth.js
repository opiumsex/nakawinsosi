const jwt = require('jsonwebtoken');

const JWT_SECRET = process.env.JWT_SECRET || 'nakawin-casino-secret-key-2024';

const auth = async (req, res, next) => {
    try {
        console.log('üîê Auth Middleware - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞...');
        console.log('Headers:', req.headers);
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        let token = req.header('Authorization') || 
                   req.header('authorization') || 
                   req.query.token;

        console.log('Raw token:', token);

        // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ Bearer
        if (token && token.startsWith('Bearer ')) {
            token = token.slice(7);
        }

        if (!token) {
            console.log('‚ùå –¢–æ–∫–µ–Ω –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω');
            return res.status(401).json({ 
                success: false,
                message: '–¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç' 
            });
        }

        console.log('Token to verify:', token.substring(0, 20) + '...');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
        const decoded = jwt.verify(token, JWT_SECRET);
        console.log('‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω. User ID:', decoded.userId);

        // –î–æ–±–∞–≤–ª—è–µ–º user ID –∫ –∑–∞–ø—Ä–æ—Å—É
        req.userId = decoded.userId;
        next();

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error.message);
        
        if (error.name === 'JsonWebTokenError') {
            return res.status(401).json({ 
                success: false,
                message: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω' 
            });
        }
        
        if (error.name === 'TokenExpiredError') {
            return res.status(401).json({ 
                success: false,
                message: '–¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫' 
            });
        }

        res.status(401).json({ 
            success: false,
            message: '–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏' 
        });
    }
};

module.exports = auth;