const mongoose = require('mongoose');
const path = require('path');
require('dotenv').config({ path: path.join(__dirname, '../../.env') });

const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/nakawin';

async function addWheelPrizes() {
    try {
        console.log('üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB...');
        await mongoose.connect(MONGODB_URI, {
            useNewUrlParser: true,
            useUnifiedTopology: true,
        });
        
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ');

        const Wheel = require('../models/Wheel');
        
        // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∫–æ–ª–µ—Å–æ
        await Wheel.deleteMany({});
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∫–æ–ª–µ—Å–æ —Å –ø—Ä–∏–∑–∞–º–∏
        const wheelPrizes = {
            name: "–ö–æ–ª–µ—Å–æ –§–æ—Ä—Ç—É–Ω—ã Nakawin",
            segments: [
                { 
                    name: "100 –º–æ–Ω–µ—Ç", 
                    value: 100, 
                    chance: 25, 
                    color: "#FF6B6B",
                    image: "/images/coins/100.png",
                    type: "currency"
                },
                { 
                    name: "500 –º–æ–Ω–µ—Ç", 
                    value: 500, 
                    chance: 10, 
                    color: "#4ECDC4",
                    image: "/images/coins/500.png",
                    type: "currency"
                },
                { 
                    name: "50 –º–æ–Ω–µ—Ç", 
                    value: 50, 
                    chance: 30, 
                    color: "#45B7D1",
                    image: "/images/coins/50.png",
                    type: "currency"
                },
                { 
                    name: "1000 –º–æ–Ω–µ—Ç", 
                    value: 1000, 
                    chance: 5, 
                    color: "#96CEB4",
                    image: "/images/coins/1000.png",
                    type: "currency"
                },
                { 
                    name: "–ú–µ—á –≤–æ–∏–Ω–∞", 
                    value: 200, 
                    chance: 15, 
                    color: "#FFEAA7",
                    image: "/images/items/sword.png",
                    type: "item"
                },
                { 
                    name: "–ö–æ–ª—å—Ü–æ –º–∞–≥–∏–∏", 
                    value: 300, 
                    chance: 10, 
                    color: "#DDA0DD",
                    image: "/images/items/ring.png",
                    type: "item"
                },
                { 
                    name: "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç", 
                    value: 1500, 
                    chance: 3, 
                    color: "#FFD700",
                    image: "/images/items/artifact.png",
                    type: "item"
                },
                { 
                    name: "200 –º–æ–Ω–µ—Ç", 
                    value: 200, 
                    chance: 20, 
                    color: "#A29BFE",
                    image: "/images/coins/200.png",
                    type: "currency"
                }
            ]
        };

        const wheel = new Wheel(wheelPrizes);
        await wheel.save();
        
        console.log('üé° –ö–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!');
        console.log('üìä –ü—Ä–∏–∑—ã –Ω–∞ –∫–æ–ª–µ—Å–µ:');
        wheelPrizes.segments.forEach((prize, index) => {
            console.log(`${index + 1}. ${prize.name} - ${prize.value} –º–æ–Ω–µ—Ç (—à–∞–Ω—Å: ${prize.chance}%)`);
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    } finally {
        await mongoose.connection.close();
        console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
addWheelPrizes();