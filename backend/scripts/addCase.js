const mongoose = require('mongoose');
const path = require('path');
require('dotenv').config({ path: path.join(__dirname, '../../.env') });

// Connect to MongoDB
const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/nakawin';

console.log('üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB...');
console.log('URI:', MONGODB_URI ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');

mongoose.connect(MONGODB_URI, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
})
.then(() => {
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB');
    runScript();
})
.catch((error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error.message);
    console.log('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:');
    console.log('1. –§–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞');
    console.log('2. MONGODB_URI —É–∫–∞–∑–∞–Ω –≤ .env —Ñ–∞–π–ª–µ');
    console.log('3. MongoDB —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω');
    process.exit(1);
});

const { Case } = require('../models/Case');

const addCase = async (caseData) => {
    try {
        const newCase = new Case(caseData);
        await newCase.save();
        console.log('‚úÖ –ö–µ–π—Å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!');
        console.log(`üì¶ –ù–∞–∑–≤–∞–Ω–∏–µ: ${caseData.name}`);
        console.log(`üí∞ –¶–µ–Ω–∞: ${caseData.price} –º–æ–Ω–µ—Ç`);
        console.log(`üéÅ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${caseData.items.length}`);
        return newCase;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–µ–π—Å–∞:', error.message);
        throw error;
    }
};

// –ü—Ä–∏–º–µ—Ä—ã –∫–µ–π—Å–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
const sampleCases = [
    {
        name: "–°—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–µ–π—Å",
        image: "/images/start-case.png",
        price: 101,
        items: [
            { name: "–ú–µ—á –Ω–æ–≤–∏—á–∫–∞", value: 50, chance: 40, image: "/images/novice-sword.png" },
            { name: "–©–∏—Ç —É—á–µ–Ω–∏–∫–∞", value: 75, chance: 30, image: "/images/student-shield.png" },
            { name: "–ö–æ–ª—å—Ü–æ –º–∞–≥–∏–∏", value: 150, chance: 15, image: "/images/magic-ring.png" },
            { name: "–ê–º—É–ª–µ—Ç —Å–∏–ª—ã", value: 300, chance: 10, image: "/images/strength-amulet.png" },
            { name: "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç", value: 1000, chance: 5, image: "/images/legendary-artifact.png" }
        ]
    },
    {
        name: "–≠–ø–∏—á–µ—Å–∫–∏–π –∫–µ–π—Å",
        image: "/images/epic-case.png",
        price: 250,
        items: [
            { name: "–≠–ø–∏—á–µ—Å–∫–∏–π –º–µ—á", value: 300, chance: 25, image: "/images/epic-sword.png" },
            { name: "–î–æ—Å–ø–µ—Ö –¥—Ä–∞–∫–æ–Ω–∞", value: 500, chance: 20, image: "/images/dragon-armor.png" },
            { name: "–ö–æ–ª—å—Ü–æ –æ–≥–Ω—è", value: 400, chance: 20, image: "/images/fire-ring.png" },
            { name: "–ê—Ä—Ç–µ—Ñ–∞–∫—Ç –¥—Ä–µ–≤–Ω–∏—Ö", value: 800, chance: 15, image: "/images/ancient-artifact.png" },
            { name: "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∫–ª–∏–Ω–æ–∫", value: 1500, chance: 10, image: "/images/legendary-blade.png" },
            { name: "–ú–∏—Ñ–∏—á–µ—Å–∫–∏–π —â–∏—Ç", value: 1200, chance: 10, image: "/images/mythic-shield.png" }
        ]
    },
    {
        name: "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∫–µ–π—Å",
        image: "/images/legendary-case.png",
        price: 500,
        items: [
            { name: "–ú–µ—á –¥—Ä–∞–∫–æ–Ω–∞", value: 1000, chance: 15, image: "/images/dragon-sword.png" },
            { name: "–©–∏—Ç —Ç–∏—Ç–∞–Ω–∞", value: 800, chance: 20, image: "/images/titan-shield.png" },
            { name: "–ö–æ–ª—å—Ü–æ –±–µ—Å—Å–º–µ—Ä—Ç–∏—è", value: 600, chance: 25, image: "/images/immortal-ring.png" },
            { name: "–ê—Ä—Ç–µ—Ñ–∞–∫—Ç –±–æ–≥–æ–≤", value: 2000, chance: 10, image: "/images/god-artifact.png" },
            { name: "–ö–ª–∏–Ω–æ–∫ —Ç–µ–Ω–∏", value: 300, chance: 20, image: "/images/shadow-blade.png" },
            { name: "–ù–∞—Ä—É—á–∏ —Å–∏–ª—ã", value: 200, chance: 10, image: "/images/power-bracers.png" }
        ]
    }
];

async function runScript() {
    try {
        console.log('\nüéÆ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–µ–π—Å–æ–≤...\n');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–µ–π—Å—ã
        const existingCases = await Case.countDocuments();
        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–µ–π—Å–æ–≤: ${existingCases}`);
        
        if (existingCases > 0) {
            console.log('‚ö†Ô∏è  –ö–µ–π—Å—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ.');
            mongoose.connection.close();
            return;
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–µ–π—Å—ã
        for (const caseData of sampleCases) {
            console.log(`\n‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–µ–π—Å: ${caseData.name}`);
            await addCase(caseData);
            await new Promise(resolve => setTimeout(resolve, 500)); // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è–º–∏
        }
        
        console.log('\nüéâ –í—Å–µ –∫–µ–π—Å—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
        console.log('üìã –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–µ–π—Å–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000');
        
    } catch (error) {
        console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', error.message);
    } finally {
        mongoose.connection.close();
        console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    // –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ mongoose.connect
}